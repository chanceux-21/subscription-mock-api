version: '3.8'  # Версия возвращена для совместимости

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - elastic
    command: 
      - sh
      - -c
      - "apt-get update && apt-get install -y netcat && /etc/confluent/docker/run"
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok || exit 1"]
      interval: 10s
      timeout: 20s
      retries: 10
      start_period: 30s

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - elastic

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: es-node
    environment:
      - node.name=es-node
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - ELASTIC_PASSWORD=changeme
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es-node/es-node.key
      - xpack.security.http.ssl.certificate=certs/es-node/es-node.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
      - ./es-config/certs:/usr/share/elasticsearch/config/certs
    networks:
      - elastic
    healthcheck:
      test: ["CMD", "curl", "-k", "-u", "elastic:changeme", "https://localhost:9200"]
      interval: 10s
      timeout: 10s
      retries: 12

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=https://es-node:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=changeme
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    ports:
      - "5601:5601"
    volumes:
      - ./es-config/certs:/usr/share/kibana/config/certs
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elastic

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: subscription-app
    environment:
      - JWT_SECRET=your_strong_secret_here
      - ELASTIC_USER=elastic
      - ELASTIC_PASSWORD=changeme
      - KAFKA_BROKER=kafka:29092
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    depends_on:
      - kafka
      - elasticsearch
    networks:
      - elastic

  # Добавляем клиентский сервис React
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: subscription-client
    ports:
      - "80:80"
    networks:
      - elastic
    depends_on:
      - app

networks:
  elastic:
    driver: bridge

volumes:
  es-data:
    driver: local